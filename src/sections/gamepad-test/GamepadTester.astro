<div id="gamepad-container" class="flex flex-col items-center justify-center">
  <svg
    class="w-full max-w-[600px] h-full lg:w-4/6 lg:h-3/4"
    version="1.1"
    id="Capa_1"
    xmlns="http://www.w3.org/2000/svg"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    x="0px"
    y="0px"
    width="600px"
    height="500px"
    xml:space="preserve"
    viewBox="0 0 600 500"
  >
    <g id="controller">
      <path
        id="controller-b1"
        d="M512.446 211.017C523.417 211.017 532.311 202.123 532.311 191.152C532.311 180.181 523.417 171.287 512.446 171.287C501.475 171.287 492.581 180.181 492.581 191.152C492.581 202.123 501.475 211.017 512.446 211.017Z"
        fill="#383838"></path>
      <path
        id="controller-b2"
        d="M419.202 211.017C430.173 211.017 439.067 202.123 439.067 191.152C439.067 180.181 430.173 171.287 419.202 171.287C408.231 171.287 399.337 180.181 399.337 191.152C399.337 202.123 408.231 211.017 419.202 211.017Z"
        fill="#383838"></path>
      <path
        id="controller-b3"
        d="M465.824 164.395C476.796 164.395 485.69 155.501 485.69 144.529C485.69 133.557 476.796 124.663 465.824 124.663C454.852 124.663 445.958 133.557 445.958 144.529C445.958 155.501 454.852 164.395 465.824 164.395Z"
        fill="#383838"></path>
      <path
        id="controller-b6"
        d="M135.494 10C135.494 4.47715 127.547 0 117.744 0C107.941 0 99.994 4.47715 99.994 10V40.898C99.994 46.4208 107.941 50.898 117.744 50.898C127.547 50.898 135.494 46.4208 135.494 40.898V10Z"
        fill="#383838"></path>
      <path
        id="controller-b7"
        d="M484.494 10C484.494 4.47715 476.547 0 466.744 0C456.941 0 448.994 4.47715 448.994 10V40.898C448.994 46.4208 456.941 50.898 466.744 50.898C476.547 50.898 484.494 46.4208 484.494 40.898V10Z"
        fill="#383838"></path>
      <path id="controller-b8" d="M250 186H225V199H250V186Z" fill="#383838"
      ></path>
      <path
        id="controller-b9"
        d="M330 200L359 191.596L330 184V200Z"
        fill="#383838"></path>

      <path
        id="controller-b13"
        d="M114.003 205.595C108.96 209.291 103.679 213.685 102.901 215.258C101.548 217.963 99.657 232.51 100.012 237.498C100.085 238.551 100.318 241.758 113.984 241.764L114.026 244.824V241.764C127.692 241.758 127.924 238.551 127.998 237.493C128.353 232.517 126.468 217.97 125.109 215.259C124.407 213.851 119.682 209.762 114.003 205.595Z"
        fill="#383838"></path>
      <path
        id="controller-b12"
        d="M114.003 182.84C119.689 178.673 124.407 174.584 125.111 173.171C126.464 170.472 128.355 155.925 128 150.931C127.92 149.878 127.694 146.677 114.028 146.671C100.32 146.677 100.093 149.878 100.013 150.931C99.658 155.918 101.543 170.466 102.902 173.171C103.685 174.744 108.96 179.15 114.003 182.84Z"
        fill="#383838"></path>
      <path
        id="controller-b14"
        d="M92.962 183.11C90.502 181.881 78.378 180.185 72.044 180.185C71.542 180.185 71.107 180.197 70.734 180.227C69.675 180.301 66.468 180.528 66.463 194.193C66.469 207.902 69.676 208.129 70.729 208.202C71.108 208.233 71.549 208.245 72.045 208.245C78.385 208.245 90.509 206.557 92.963 205.32C94.634 204.481 99.316 198.747 102.639 194.218C98.936 189.181 94.529 183.893 92.962 183.11Z"
        fill="#383838"></path>
      <path
        id="controller-b15"
        d="M157.284 180.234C156.905 180.203 156.464 180.191 155.968 180.191C149.628 180.191 137.504 181.88 135.044 183.116C133.478 183.9 129.071 189.181 125.375 194.224C128.692 198.752 133.374 204.494 135.044 205.326C137.504 206.556 149.628 208.251 155.962 208.251C156.458 208.251 156.898 208.239 157.272 208.209C158.331 208.135 161.538 207.909 161.543 194.243C161.543 194.193 161.543 194.151 161.543 194.114C161.525 180.528 158.336 180.301 157.284 180.234Z"
        fill="#383838"></path>
      <path
        id="controller-b0"
        d="M465.824 257.639C476.795 257.639 485.689 248.745 485.689 237.774C485.689 226.803 476.795 217.909 465.824 217.909C454.853 217.909 445.959 226.803 445.959 237.774C445.959 248.745 454.853 257.639 465.824 257.639Z"
        fill="#383838"></path>
      <path
        id="layout"
        d="M561.234 191.611C558.793 173.306 551.063 139.536 517.703 116.347L509.563 85.0191C509.563 85.0191 508.75 77.2901 498.578 71.5911C498.578 71.5911 499.19 66.3031 489.833 63.8621C480.476 61.4201 458.706 56.7451 433.284 65.2881C433.284 65.2881 429.416 66.3041 429.624 72.0021C429.624 72.0021 417.623 77.9011 415.181 88.8871C412.74 99.8721 409.484 113.703 409.484 113.703H372.568H211.195H171.635C171.635 113.703 168.379 99.8721 165.937 88.8871C163.495 77.9021 151.494 72.0021 151.494 72.0021C151.696 66.3041 147.834 65.2881 147.834 65.2881C122.405 56.7451 100.643 61.4201 91.285 63.8621C81.928 66.3031 82.539 71.5911 82.539 71.5911C72.368 77.2891 71.554 85.0191 71.554 85.0191L63.414 116.347C30.054 139.535 22.324 173.306 19.882 191.611C17.441 209.921 1.57902 330.344 0.354019 344.58C-0.863981 358.821 -1.67798 412.114 47.142 419.844C95.962 427.574 121.592 383.229 121.592 383.229L154.548 326.068C228.184 383.229 263.172 305.523 263.172 305.523H317.946C317.946 305.523 352.934 383.229 426.57 326.068L459.526 383.229C459.526 383.229 485.157 427.574 533.976 419.844C582.795 412.114 581.981 358.816 580.763 344.58C579.546 330.338 563.677 209.916 561.234 191.611ZM465.824 118.544C480.15 118.544 491.809 130.202 491.809 144.529C491.809 158.855 480.15 170.514 465.824 170.514C451.497 170.514 439.839 158.855 439.839 144.529C439.839 130.203 451.497 118.544 465.824 118.544ZM93.911 150.502C94.615 140.564 108.189 140.558 113.978 140.551C119.823 140.558 133.385 140.564 134.101 150.496C134.48 155.82 132.687 171.72 130.588 175.906C128.813 179.456 120.784 185.539 116.01 188.942C115.875 189.064 115.729 189.168 115.563 189.259C115.08 189.541 114.541 189.682 114.009 189.682C113.807 189.682 113.605 189.658 113.409 189.62C113.171 189.571 112.938 189.498 112.718 189.4C112.455 189.271 112.216 189.125 112.002 188.941C108.795 186.664 99.339 179.73 97.43 175.905C95.325 171.72 93.525 155.821 93.911 150.502ZM70.288 214.316C60.35 213.612 60.343 200.038 60.343 194.243C60.343 188.404 60.349 174.83 70.294 174.126C70.79 174.09 71.377 174.071 72.044 174.071C77.699 174.071 91.573 175.577 95.704 177.639C99.529 179.548 106.463 189.016 108.74 192.223C108.942 192.461 109.114 192.731 109.236 193.031C109.402 193.428 109.481 193.851 109.475 194.267C109.469 194.719 109.365 195.178 109.157 195.601C109.041 195.828 108.9 196.041 108.741 196.231C106.936 198.79 99.69 208.82 95.705 210.809C91.58 212.871 77.7 214.377 72.045 214.377C71.377 214.371 70.784 214.353 70.288 214.316ZM134.101 237.927C133.391 247.871 119.823 247.878 114.034 247.884H114.01C108.19 247.878 94.622 247.871 93.918 237.927C93.539 232.615 95.332 216.715 97.431 212.523C99.34 208.704 108.808 201.764 112.009 199.487C112.144 199.371 112.291 199.267 112.45 199.175C112.682 199.04 112.927 198.936 113.178 198.863C113.973 198.649 114.837 198.735 115.571 199.157C115.767 199.273 115.95 199.408 116.11 199.554C120.908 202.982 128.833 208.997 130.59 212.517C132.681 216.721 134.48 232.615 134.101 237.927ZM155.968 214.371C150.319 214.371 136.439 212.866 132.314 210.804C128.324 208.815 121.072 198.76 119.278 196.22C119.15 196.073 119.033 195.902 118.935 195.724C118.642 195.192 118.513 194.592 118.55 194.004C118.574 193.631 118.666 193.264 118.831 192.908C118.954 192.651 119.106 192.413 119.29 192.198C121.585 188.979 128.501 179.549 132.313 177.639C136.444 175.577 150.318 174.071 155.973 174.071C156.634 174.071 157.227 174.09 157.729 174.126C167.601 174.83 167.674 188.227 167.674 194.084C167.674 194.133 167.674 194.176 167.674 194.219C167.668 200.038 167.662 213.613 157.717 214.317C157.223 214.353 156.629 214.371 155.968 214.371ZM200.111 314.892C177.785 314.892 159.621 296.728 159.621 274.408C159.621 252.083 177.785 233.919 200.111 233.919C222.437 233.919 240.601 252.083 240.601 274.408C240.607 296.728 222.437 314.892 200.111 314.892ZM253.013 197.712C253.013 200.404 250.822 202.602 248.123 202.602H226.765C224.066 202.602 221.875 200.412 221.875 197.712V187.54C221.875 184.848 224.066 182.65 226.765 182.65H248.123C250.822 182.65 253.013 184.841 253.013 187.54V197.712ZM332.708 203.08C332.427 203.172 332.126 203.209 331.826 203.209C329.134 203.209 326.936 201.018 326.936 198.318V185.705C326.936 182.731 329.794 180.136 332.627 180.92L358.87 188.043C360.204 188.404 361.128 189.616 361.128 190.993C361.128 193.502 359.225 195.577 356.789 195.852L332.708 203.08ZM381.362 314.892C359.036 314.892 340.872 296.728 340.872 274.408C340.872 252.083 359.036 233.919 381.362 233.919C403.687 233.919 421.851 252.083 421.851 274.408C421.852 296.728 403.688 314.892 381.362 314.892ZM419.202 217.137C404.875 217.137 393.216 205.479 393.216 191.152C393.216 176.825 404.875 165.167 419.202 165.167C433.528 165.167 445.187 176.825 445.187 191.152C445.182 205.479 433.528 217.137 419.202 217.137ZM465.824 263.759C451.497 263.759 439.839 252.101 439.839 237.774C439.839 223.447 451.497 211.789 465.824 211.789C480.15 211.789 491.809 223.447 491.809 237.774C491.804 252.101 480.15 263.759 465.824 263.759ZM512.446 217.137C498.119 217.137 486.461 205.479 486.461 191.152C486.461 176.825 498.119 165.167 512.446 165.167C526.773 165.167 538.431 176.825 538.431 191.152C538.426 205.479 526.772 217.137 512.446 217.137Z"
        fill="#383838"></path>
      <path
        id="controller-b4"
        d="M137 60H100C90.8873 60 83.5 64.4772 83.5 70C83.5 75.5228 90.8873 80 100 80H137C146.113 80 153.5 75.5228 153.5 70C153.5 64.4772 146.113 60 137 60Z"
        fill="#383838"
        stroke="black"
        stroke-width="2"></path>
      <path
        id="controller-b5"
        d="M483 60H446C436.887 60 429.5 64.4772 429.5 70C429.5 75.5228 436.887 80 446 80H483C492.113 80 499.5 75.5228 499.5 70C499.5 64.4772 492.113 60 483 60Z"
        fill="#383838"
        stroke="black"
        stroke-width="2"></path>
      <circle
        id="controller-b10-below"
        name="left-stick"
        cx="200.000"
        cy="275.000"
        data-original-x-position="200.000"
        data-original-y-position="275.000"
        r="20"
        width="50.898"
        height="100.711"
        fill="#262626"></circle>

      <circle
        id="controller-b10"
        name="left-stick"
        cx="200.000"
        cy="275.000"
        data-original-x-position="200.000"
        data-original-y-position="275.000"
        r="35"
        width="50.898"
        height="100.711"
        fill="#444444"></circle>

      <circle
        id="controller-b11-bottom"
        name="stick-right"
        cx="381.000"
        cy="275.000"
        data-original-x-position="381.000"
        data-original-y-position="275.000"
        r="20"
        width="50.898"
        height="100.711"
        fill="#262626"></circle>

      <circle
        id="controller-b11"
        name="stick-right"
        cx="381.000"
        cy="275.000"
        data-original-x-position="381.000"
        data-original-y-position="275.000"
        r="35"
        width="50.898"
        height="100.711"
        fill="#444444"></circle>
    </g>
  </svg>
</div>

<style>
  .selected-button {
    fill: #ff8110;
  }
</style>

<script>
  const statusText = document.getElementById('status') as HTMLHeadingElement;

  let controllerIndex: number | null = null;

  let lastButtonStates: number[] = [];
  let lastAxes: number[] = [];

  window.addEventListener('gamepadconnected', (e) => {
    const gamepad = e.gamepad;
    controllerIndex = gamepad.index;
    statusText.textContent = `Gamepad conectado: ${gamepad.id}`;
    lastButtonStates = gamepad.buttons.map((button) => button.value);
    lastAxes = [...gamepad.axes];
  });

  window.addEventListener('gamepaddisconnected', () => {
    statusText.textContent = 'Gamepad desconectado.';
    controllerIndex = null;
  });

  function handleButtons(buttons: readonly GamepadButton[]) {
    let anyChange = false;

    for (let i = 0; i < buttons.length; i++) {
      const button = buttons[i];
      const buttonElement = document.getElementById(`controller-b${i}`);
      const selectedClass = 'selected-button';
      const buttonState = button.value;

      // Check if button state has changed
      if (lastButtonStates[i] !== buttonState) {
        anyChange = true;
        lastButtonStates[i] = buttonState;

        if (buttonElement) {
          if (buttonState > 0.5) {
            buttonElement.classList.add(selectedClass);
            buttonElement.style.filter = `brightness(${buttonState * 100}%)`;
          } else {
            buttonElement.classList.remove(selectedClass);
            buttonElement.style.filter = 'brightness(100%)';
          }
        }
      }
    }

    return anyChange;
  }

  function updateStick(
    elementId: string,
    leftRightAxis: number,
    upDownAxis: number
  ) {
    const multiplier = 25;
    const stickLeftRight = leftRightAxis * multiplier;
    const stickUpDown = upDownAxis * multiplier;

    const stick = document.getElementById(elementId);
    const x = Number(stick?.dataset.originalXPosition);
    const y = Number(stick?.dataset.originalYPosition);

    stick?.setAttribute('cx', String(x + stickLeftRight));
    stick?.setAttribute('cy', String(y + stickUpDown));
  }

  function handleAxes(axes: readonly number[]) {
    let anyChange = false;

    // Check and update the first stick (left-right & up-down axes)
    if (
      Math.abs(axes[0] - lastAxes[0]) > 0.1 ||
      Math.abs(axes[1] - lastAxes[1]) > 0.1
    ) {
      anyChange = true;
      lastAxes[0] = axes[0];
      lastAxes[1] = axes[1];
      updateStick('controller-b10', axes[0], axes[1]);
    }

    // Check and update the second stick (left-right & up-down axes)
    if (
      Math.abs(axes[2] - lastAxes[2]) > 0.1 ||
      Math.abs(axes[3] - lastAxes[3]) > 0.1
    ) {
      anyChange = true;
      lastAxes[2] = axes[2];
      lastAxes[3] = axes[3];
      updateStick('controller-b11', axes[2], axes[3]);
    }

    return anyChange;
  }

  function gameLoop() {
    if (controllerIndex !== null) {
      const gamepad = navigator.getGamepads()[controllerIndex];
      if (!gamepad) return;

      const buttonsChanged = handleButtons(gamepad.buttons);
      const axesChanged = handleAxes(gamepad.axes);

      if (buttonsChanged || axesChanged) {
        console.log('rendering'); // Log only if something changed
      }
    }

    requestAnimationFrame(gameLoop);
  }

  gameLoop();
</script>
